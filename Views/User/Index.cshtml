@model CompanyPhonebook.Models.UserViewModel

@{
    ViewData["Title"] = "Employees";
}

<h1 class="display-4">Employees</h1>

<!-- 🔍 Search Form -->
<form asp-action="Index" method="get" class="mb-3">
    <div class="input-group">
        <input type="text" name="searchQuery" class="form-control" placeholder="Search Employees..."
               value="@Model.SearchQuery" aria-label="Search Employees">
        <button type="submit" class="btn btn-primary"><i class="fa fa-search"></i> Search</button>
    </div>

    <!-- Create and Dashboard Buttons -->
    @if (User.IsInRole("Admin"))
    {
        <a asp-action="Create" class="btn btn-success ms-2">➕ Create Employee</a>
    }
    <a asp-action="Index" asp-controller="Dashboard" class="btn btn-primary ms-2">🏠 Dashboard</a>
</form>

@* <!-- Export buttons -->
<div class="mb-3">
    <a href="@Url.Action("ExportToCSV", "User")" class="btn btn-primary me-2">Export to CSV</a>
    <a href="@Url.Action("ExportToExcel", "User")" class="btn btn-success">Export to Excel</a>
</div> *@

<!-- Export buttons (Grouped) -->
<div class="mb-3">
    <div class="btn-group" role="group" aria-label="Export Options">
        <a href="@Url.Action("ExportToCSV", "User")" class="btn btn-primary">Export to CSV</a>
        <a href="@Url.Action("ExportToExcel", "User")" class="btn btn-success">Export to Excel</a>
    </div>
</div>

<!-- Responsive Grid Layout -->
<div class="row">
    @if (Model.Users.Any())
    {
        @foreach (var user in Model.Users)
        {
            <div class="col-lg-4 col-md-6 mb-4">
                <div class="card shadow-sm border-light">
                    <div class="card-body">
                        <h5 class="card-title">@user.FirstName @user.LastName</h5>
                        <p class="card-text"><strong>Email:</strong> @user.Email</p>
                        <p class="card-text"><strong>Department:</strong> @(user.Department != null ? user.Department.Name : "No Department")</p>
                        <p class="card-text"><strong>Direct Extension:</strong> @user.ExtensionNumber</p>
                        <div class="d-flex justify-content-between">
                            <a asp-action="Details" asp-route-id="@user.Id" class="btn btn-info btn-sm">Details</a>
                            @if (User.IsInRole("Admin"))
                            {
                                <a asp-action="Edit" asp-route-id="@user.Id" class="btn btn-warning btn-sm">Edit</a>
                                <a asp-action="Delete" asp-route-id="@user.Id" class="btn btn-danger btn-sm">Delete</a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="col-12 text-center">
            <p>No users found.</p>
        </div>
    }
</div>

<!-- Pagination Controls -->
<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center">
        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
            <a class="page-link" href="?searchQuery=@Model.SearchQuery&page=@(Model.CurrentPage - 1)" tabindex="-1">Previous</a>
        </li>
        @for (var i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                <a class="page-link" href="?searchQuery=@Model.SearchQuery&page=@i">@i</a>
            </li>
        }
        <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
            <a class="page-link" href="?searchQuery=@Model.SearchQuery&page=@(Model.CurrentPage + 1)">Next</a>
        </li>
    </ul>
</nav>

<!-- CSS for Floating Buttons and Card Effects -->
<style>
    /* Floating Action Buttons */
    .fab {
        position: fixed;
        right: 20px;
        z-index: 1000;
        padding: 15px 25px;
        border-radius: 50%;
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease-in-out;
    }

        .fab:hover {
            transform: scale(1.1);
        }

    .create-btn {
        bottom: 80px;
        background-color: #28a745;
        color: white;
    }

    .back-btn {
        bottom: 20px;
        background-color: #007bff;
        color: white;
    }

    /* Hover effects for cards */
    .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    }

    /* Styling for the search form input and buttons */
    .input-group input {
        border-radius: 0.375rem 0 0 0.375rem;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    .input-group .btn {
        border-radius: 0 0.375rem 0.375rem 0;
    }

    /* Styling for pagination */
    .pagination .page-item {
        margin: 0 2px;
    }

        .pagination .page-item.active .page-link {
            background-color: #007bff;
            border-color: #007bff;
        }

    .pagination .page-link {
        color: #007bff;
    }

        .pagination .page-link:hover {
            color: #0056b3;
            text-decoration: none;
        }

    /* Styling for export buttons */
    .btn-primary, .btn-success {
        font-size: 14px;
    }
</style>

<!-- Add Font Awesome for Icons -->
<script src="https://kit.fontawesome.com/a076d05399.js"></script>
